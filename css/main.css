@font-face {
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 400;
  src: local("Montserrat Regular"), local("Montserrat-Regular"),
    url(../fonts/Montserrat-Regular.ttf) format("truetype");
}

@font-face {
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 700;
  src: local("Montserrat Bold"), local("Montserrat-Bold"),
    url(../fonts/Montserrat-Bold.ttf) format("truetype");
}

body {
  font-family: Montserrat, "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: 0px;
}

/* Header */
header {
  background-image: url(../img/header-bg.jpg);
  background-size: cover;
  background-attachment: fixed;
  background-position: center;
  height: 100vh;
  min-height: 400px;
  display: flex; /*é usada para criar um contêiner flexível que organiza os elementos filho em uma linha ou coluna, permitindo que eles se ajustem automaticamente para preencher o espaço disponível.*/
  justify-content: center; /*é usada em conjunto com a propriedade "display: flex;" para alinhar horizontalmente os elementos filho dentro de um contêiner flexível. */
  align-items: center; /*é usada para alinhar os itens flexíveis verticalmente dentro de um contêiner flexível. Ela é usada em conjunto com a propriedade "display: flex;" no contêiner pai. */
  text-align: center; /*alinha o texto para o centro */
}

header .intro-text p,
header .intro-text h1 {
  color: #ecece2;
}

header .intro-text h1 {
  margin: 0px;
  font-size: 3em;
  text-transform: uppercase;
}

header .intro-text p {
  font-size: 2em;
  font-style: italic;
}

header .intro-text .btn-intro {
  color: #fff;
  background-color: #fed136;
  border-color: #fed136;
  border-radius: 3px;
  font-size: 1.5em;
  padding: 20px 40px;
  line-height: 1.42857143;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  text-decoration: none;
  text-transform: uppercase;
}

/* Main */
main {
  padding: 100px 15%; /*é usada para definir o preenchimento interno de um elemento */
  color: #333;
  display: flex;
  flex-flow: wrap; /*é uma forma de abreviar as propriedades flex-direction e flex-wrap em uma única declaração. Ela permite controlar a direção do flex container e especificar se os itens flexíveis devem ser embrulhados em várias linhas quando não houver espaço suficiente. */
  text-align: center;
}

main .service .circle-icon {
  background-color: #fed136;
  color: #fff;
  width: 6em;
  height: 6em;
  display: flex;
  justify-content: center;
  align-items: center; /* alinha os items */
  border-radius: 50%; /* controla a borda */
  margin: auto;
}

main .service-description {
  flex-basis: 100%;
  margin-bottom: 100px;
}

main .service-description h1 {
  font-size: 3em;
}

main .service-description p {
  color: #777;
  font-style: italic;
}

main .service .circle-icon .fa {
  font-size: 3em;
}

main .service {
  flex-basis: calc(100% / 3);
}

main .service p {
  color: #777;
  font-size: 14px;
  line-height: 1.75;
}

/* footer */
footer {
  background-color: #ecece2;
}

footer .footer-content {
  text-align: center;
  display: flex;
  padding: 40px 15% 60px;
}

footer .footer-content > section {
  flex-basis: calc(
    100% / 3
  ); /*é usada em conjunto com a propriedade flex para especificar o tamanho inicial de um item flexível dentro de um container flexível. */
}

footer section.social ul {
  display: flex;
  justify-content: center;
  align-items: center;
  list-style: none; /* é usada para controlar o estilo dos marcadores em listas (elementos <ul>, <ol> e <dl>). */
  margin: 0;
  padding: 0;
}

footer section.social a {
  margin: 15px;
  color: #555;
  border: 3px solid #555;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
  text-decoration: none;
}

footer section.social a:hover {
  color: #fff;
  background-color: #555;
}

footer section.copyright {
  padding: 15px;
  text-align: center;
  color: #555;
  background-color: #c7c7af;
}

footer section.copyright i.fa-heart {
  color: #f00;
}
